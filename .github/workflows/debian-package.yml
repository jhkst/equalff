name: Build Debian Package

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch: # Allows manual triggering

jobs:
  build-debian:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential debhelper devscripts

      - name: Set up Git user (for dpkg-buildpackage)
        run: |
          git config --global user.email "jhkst@centrum.cz"
          git config --global user.name "jhkst"

      - name: Update changelog (set correct version and distribution)
        # This step assumes your debian/changelog is mostly up-to-date.
        # For actual releases, you'd manually set the version and distribution.
        # This example uses 'unstable' and a timestamp-based version for PR builds.
        # For tagged releases, you could extract version from the tag.
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            VERSION=$(date +%Y%m%d%H%M%S)
            dch -v "${VERSION}-1~pr${{ github.event.number }}" "Automated PR build for #${{ github.event.number }}"
            dch --distribution unstable ""
          elif [[ "${{ github.ref_type }}" == "tag" ]]; then
            VERSION=${{ github.ref_name }}
            # Assuming tag is vX.Y.Z, remove 'v' if present
            VERSION=${VERSION#v}
            dch -v "${VERSION}-1" "Release version ${VERSION}"
            # You might want to set a specific distribution for releases, e.g., stable, testing
            dch --distribution unstable "" # Or your target release distribution
          else # For pushes to main not part of a PR or tag
             # Use current changelog version or a timestamp
            dch -r "" # Finalize the current entry with a timestamp
            dch --distribution unstable ""
          fi
        working-directory: ./

      - name: Build Debian package
        run: dpkg-buildpackage -us -uc -ui
        working-directory: ./

      - name: List generated files
        run: ls -l ../*.deb ../*.ddeb ../*.buildinfo ../*.changes || true

      - name: Upload Debian packages
        uses: actions/upload-artifact@v4
        with:
          name: debian-packages-${{ github.run_id }}
          path: |
            ../equalff_*.deb
            ../libequalff0_*.deb
            ../libequalff-dev_*.deb
            ../equalff_*.ddeb
            ../libequalff0_*.ddeb
            ../equalff_*.buildinfo
            ../equalff_*.changes
          if-no-files-found: error # Fails if no packages are found 